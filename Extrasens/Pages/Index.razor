@using Extrasens.Data;
@inject Blazored.LocalStorage.ILocalStorageService iLocalStorage
@page "/"
<div>
    <div class="extra-block">
        @if (div1)
        {
            <div class="block-1">
                <h1>Тестирование экстрасенсов</h1>

                <h2>Загадайте число от 10 до 99 и нажмите на кнопку</h2>
                <button class="btn-success" @onclick="GetPredict">Загадал</button>
            </div>
        }

        else
        {
            <div class="block-1">
                <div class="psychics">
                    <div class="psychic @psychicX.ResponseStatus">
                        <h4>Экстрасенс X</h4>
                        <h4>@psychicX.PredictNumber</h4>
                        <h4>Рейтинг: @psychicX.PsychicRaiting</h4>
                    </div>
                    <div class="psychic @psychicY.ResponseStatus">
                        <h4>Экстрасенс Y</h4>
                        <h4>@psychicY.PredictNumber</h4>
                        <h4>Рейтинг: @psychicY.PsychicRaiting</h4>
                    </div>
                    <div class="psychic @psychicZ.ResponseStatus">
                        <h4>Экстрасенс Z</h4>
                        <h4>@psychicZ.PredictNumber</h4>
                        <h4>Рейтинг: @psychicZ.PsychicRaiting</h4>
                    </div>
                </div>

                @if (div2)
                {
                    <h3>Введите загаданное число</h3>
                    <input type="number" min="10" max="99" maxlength="2" @bind="@userNumber" />
                    <button class="btn-success" @onclick="CheckPredict">Отправить</button>
                }
                else
                {
                    <button class="btn-success" @onclick="Repeat">Загадать еще раз</button>
                }
            </div>

            <div class="block-1">
                <h2 class="text-center">История</h2>
                <table class="table table-striped">
                    <thead class="table-success">
                        <tr>
                            <th>Экстрасенс X</th>
                            <th>Экстрасенс Y</th>
                            <th>Экстрасенс Z</th>
                            <th>Ваше число</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemHistory in predictHistory)
                        {
                            <tr>
                                <td>@itemHistory.Predict1</td>
                                <td>@itemHistory.Predict2</td>
                                <td>@itemHistory.Predict3</td>
                                <td>@itemHistory.UNumb</td>
                            </tr>

                        }

                    </tbody>
                </table>
                @if (predictHistory.Count != 0)
                {
                    <button class="btn-danger" @onclick="DeleteSession">Удалить все данные</button>
                }
            </div>
        }
    </div>
</div>


@code{

    @* CSS Params start*@
    bool div1 = true;
    bool div2 = true;
    @* CSS Params end*@

    List<PredictionHistory> predictHistory;
    Psychic psychicX;
    Psychic psychicY;
    Psychic psychicZ;
    int userNumber = 10;



    protected override async Task OnInitializedAsync()
    {

        predictHistory = await iLocalStorage.GetItemAsync<List<PredictionHistory>>("predictHistory");
        if (predictHistory == null)
        { predictHistory = new List<PredictionHistory>(); }

        psychicX = await iLocalStorage.GetItemAsync<Psychic>("psychicX");
        if (psychicX == null)
        { psychicX = new Psychic(); }

        psychicY = await iLocalStorage.GetItemAsync<Psychic>("psychicY");
        if (psychicY == null)
        { psychicY = new Psychic(); }

        psychicZ = await iLocalStorage.GetItemAsync<Psychic>("psychicZ");
        if (psychicZ == null)
        { psychicZ = new Psychic(); }

        div1 = await iLocalStorage.GetItemAsync<bool>("div1");
        if (div1 == false && predictHistory.Count == 0)
        { div1 = true; }
        else
        {
            div1 = await iLocalStorage.GetItemAsync<bool>("div1");
        }

        div2 = await iLocalStorage.GetItemAsync<bool>("div2");

        userNumber = await iLocalStorage.GetItemAsync<int>("userNumber");
        if (userNumber == 0)
        { userNumber = 10; }
    }

    private async void SaveSession()
    {
        await iLocalStorage.SetItemAsync<List<PredictionHistory>>("predictHistory", predictHistory);
        await iLocalStorage.SetItemAsync<Psychic>("psychicX", psychicX);
        await iLocalStorage.SetItemAsync<Psychic>("psychicY", psychicY);
        await iLocalStorage.SetItemAsync<Psychic>("psychicZ", psychicZ);
        await iLocalStorage.SetItemAsync<bool>("div1", div1);
        await iLocalStorage.SetItemAsync<bool>("div2", div2);
        await iLocalStorage.SetItemAsync<int>("userNumber", userNumber);
    }

    private async void DeleteSession()
    {
        div1 = true;
        div2 = true;
        predictHistory = new List<PredictionHistory>();
        await iLocalStorage.ClearAsync();
    }



    private void GetPredict()
    {

        foreach (Psychic psychic in Psychic.Objects)
        {
            psychic.PredictionNumber();
            psychic.ResponseStatus = "";
        }
        div1 = false;
        div2 = true;
    }

    private void CheckPredict()
    {

        if (userNumber >= 10 && userNumber <= 99)
        {
            foreach (Psychic psychic in Psychic.Objects)
            {
                if (psychic.PredictNumber == userNumber)
                {
                    psychic.PsychicRaiting++;
                    psychic.ResponseStatus = "green";
                }
                else
                {
                    psychic.PsychicRaiting--;
                    psychic.ResponseStatus = "";
                }
            }

            div2 = false;

            predictHistory.Add(new PredictionHistory
            {
                Predict1 = psychicX.PredictNumber,
                Predict2 = psychicY.PredictNumber,
                Predict3 = psychicZ.PredictNumber,
                UNumb = userNumber
            });
        }
        else if (userNumber > 99)
        {
            userNumber = 99;
        }
        else
        {
            userNumber = 10;
        }

        SaveSession();
    }

    private void Repeat()
    {
        GetPredict();
        userNumber = 10;
    }
}

